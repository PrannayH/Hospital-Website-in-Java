<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Details</title>
    <style>
		
		.comb{
			display: flex;
			flex-direction: row;
		}
		
		.comb .second{
			margin-left: 5%;
		}
		
		.table-container {
		  width: 100%;		  
		  overflow-x: auto;
		}
		
		table{
			width: 100%;
		}

				
		fieldset{
			margin: 2% 0;
		}
		
		.navbar {
            background-color: rgb(12, 194, 226); /* Darker shade of blue */
            color: white;
            padding: 15px 0;
            text-align: center;
            font-size: 27px;
            position: fixed;
            width: 100%;
            top: 0;
            left: 0;
            box-shadow: 0 0px 2px -2px gray;
			font-family: 'Merriweather', sans-serif;
            display: flex;
            flex-direction: row;
        }
		
		.goo {
		    display: inline-block;
		    padding: 10px 20px;
		    margin: 5px;
		    background-color: #f0f0f0; /* Light background color */
		    border: 1px solid #ccc;
		    border-radius: 5px;
		    cursor: pointer;
		
		a{

			    text-decoration: none !important; /* Remove underline */
			    color: black; /* Inherit text color */
			}
		}
        .navbar span {
            display: inline-block;
            vertical-align: middle;
            line-height: normal;
            margin: auto;
        }
		
		.z{
			display: flex;
			flex-direction: row;
			margin-top:2%;
			margin-bottom:2%;
		}
		
		.z label {
		            width: 150px; /* Adjust this width as necessary */
		            text-align:left;
		            margin-right: 10px;
		        }
		
		.z input {
		            margin:0 0 0 10%;
		        }
				
		.zz{
				display: flex;
				flex-direction: row;
				margin-top:2%;
				margin-bottom:2%;
				margin-left:25% 
			}
			
		.zz label {
		            width: 150px; /* Adjust this width as necessary */
		            text-align:left;
		            margin-right: 10px;
		        }
		
		.zz input {
		            margin:0 0 0 10%;
					width: 100px;
		        }

        .navbar .home-button {
            position: absolute;
            right: 5%;
            top: 5px;
            width: 24px;
            height: 24px;
            background-color: transparent;
            border: none;
            cursor: pointer;
        }

        .navbar .home-button img {
            width: 24px;
            height: 24px;
            vertical-align: middle;
            line-height: normal;
        }
		
		button {
            padding: 5px 10px;
            font-size: 15px;
            background-color: rgb(12, 194, 226); /* Darker shade of blue */
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
			margin:1% 0 0 0;
		}
		
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

        .dropdown:hover .dropdown-content {
            display: block;
        }
        .red-text {
            color: red;
        }
        .hidden {
            display: none;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
		.btn {
		            display: block;
		            width: 15%;
					margin:2% 0 0 0;
		            padding: 10px 5px;
		            background-color: rgb(12, 194, 226);
		            color: white;
		            border: none;
		            border-radius: 4px;
		            text-decoration: none;
		            text-align: center;
					font-size: 15px;
		        }
		
        
    </style>
    <script>
		// Example JavaScript code for dynamically adjusting table width
		window.addEventListener('resize', function() {
		    var tableContainer = document.querySelector('.table-container');
		    var table = document.querySelector('table');
		    table.style.width = tableContainer.clientWidth + 'px';
		});
		
        function addAllergyField() {
            var allergyList = document.getElementById('allergy-list');
            var div = document.createElement('div');
            div.innerHTML = '<input type="text" name="allergies" placeholder="Allergy" required> <button type="button" onclick="deleteField(this)">Delete</button>';
            allergyList.appendChild(div);
        }
        
        function deleteField(button) {
            var div = button.parentNode;
            div.parentNode.removeChild(div);
        }

        function addMedicationRow() {
            var table = document.getElementById('medicationTable').getElementsByTagName('tbody')[0];
            var newRow = table.insertRow();
            var cell1 = newRow.insertCell(0);
            var cell2 = newRow.insertCell(1);
            var cell3 = newRow.insertCell(2);

            cell1.innerHTML = '<input type="text" name="medicationNames" placeholder="Medicine Name">';
            cell2.innerHTML = '<input type="text" name="medicationFrequencies" placeholder="Frequency">';
            cell3.innerHTML = '<button type="button" onclick="deleteRow(this)">Delete</button>';
        }

        function deleteRow(button) {
            var row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }
        
        function addNewRecord() {
            var tableBody = document.getElementById('childrenTableBody');
            var row = document.createElement('tr');
            row.innerHTML = `
                <td><input type="text" name="childGender" placeholder="Gender"></td>
                <td><input type="number" name="childAge" placeholder="Age"></td>
                <td><input type="text" name="childFTNDLSCS" placeholder="FTND/LSCS"></td>
                <td><input type="text" name="childComplications" placeholder="Complications"></td>
                <td><button type="button" onclick="deleteRow(this)">Delete</button></td>
            `;
            tableBody.appendChild(row);
        }
        
        function toggleTextBox(id) {
		    var checkbox = document.getElementById(id);
		    var textBox = document.getElementById(id + "Text");
		    if (checkbox.checked) {
		       textBox.classList.remove("hidden");
		     } 
		     else {
		        textBox.classList.add("hidden");
		        textBox.value = ""; // Clear textbox value when unchecked
		     }
		}
		
		

// Initialize the visibility of text boxes based on initial values
document.addEventListener('DOMContentLoaded', function() {
    ['alcohol', 'smoking', 'sleep', 'bowel'].forEach(function(id) {
        var checkbox = document.getElementById(id);
        var textBox = document.getElementById(id + "Text");
        if (checkbox.checked && textBox.value !== "") {
            textBox.classList.remove("hidden");
        } else {
            textBox.classList.add("hidden");
        }
    });
});

function addReportRow() {
    var table = document.getElementById('reportsTable').getElementsByTagName('tbody')[0];
    var newRow = table.insertRow();
    
    // Add cells for each column
    var dateCell = newRow.insertCell(0);
    var wtCell = newRow.insertCell(1);
    var bmiCell = newRow.insertCell(2);
    var fbsCell = newRow.insertCell(3);
    var ppbsCell = newRow.insertCell(4);
    var a1cCell = newRow.insertCell(5);
    var scrCell = newRow.insertCell(6);
    var uacCell = newRow.insertCell(7);
    var tcCell = newRow.insertCell(8);
    var tglCell = newRow.insertCell(9);
    var ldlCell = newRow.insertCell(10);
    var hdlCell = newRow.insertCell(11);
    var tshCell = newRow.insertCell(12);
    var hbCell = newRow.insertCell(13);
    var tlcCell = newRow.insertCell(14);
    var egfrCell = newRow.insertCell(15);
    var d3Cell = newRow.insertCell(16);
    var b12Cell = newRow.insertCell(17);
    var atCell = newRow.insertCell(18);
    var lt4Cell = newRow.insertCell(19);
    var metCell = newRow.insertCell(20);
    var gpCell = newRow.insertCell(21);
    var dpp4Cell = newRow.insertCell(22);
    var vogCell = newRow.insertCell(23);
    var sgltCell = newRow.insertCell(24);
    var insCell = newRow.insertCell(25);
    var remarksCell = newRow.insertCell(26);
    var actionCell = newRow.insertCell(27);

    // Insert input fields into cells
    dateCell.innerHTML = '<input type="text" name="Date" placeholder="Date">';
    wtCell.innerHTML = '<input type="number" step="0.01" name="Wt" placeholder="Weight" oninput="calculateBMIs()">';
    bmiCell.innerHTML = '<input type="number" step="0.01" name="BMI" placeholder="BMI" readonly>';
    fbsCell.innerHTML = '<input type="number" step="0.01" name="FBS" placeholder="FBS">';
    ppbsCell.innerHTML = '<input type="number" step="0.01" name="PPBS" placeholder="PPBS">';
    a1cCell.innerHTML = '<input type="number" step="0.01" name="A1c" placeholder="A1c">';
    scrCell.innerHTML = '<input type="number" step="0.01" name="SCr" placeholder="SCr">';
    uacCell.innerHTML = '<input type="number" step="0.01" name="UAC" placeholder="UAC">';
    tcCell.innerHTML = '<input type="number" step="0.01" name="TC" placeholder="TC">';
    tglCell.innerHTML = '<input type="number" step="0.01" name="TGL" placeholder="TGL">';
    ldlCell.innerHTML = '<input type="number" step="0.01" name="LDL" placeholder="LDL">';
    hdlCell.innerHTML = '<input type="number" step="0.01" name="HDL" placeholder="HDL">';
    tshCell.innerHTML = '<input type="number" step="0.01" name="TSH" placeholder="TSH">';
    hbCell.innerHTML = '<input type="number" step="0.01" name="Hb" placeholder="Hb">';
    tlcCell.innerHTML = '<input type="number" name="TLC" placeholder="TLC">';
    egfrCell.innerHTML = '<input type="number" name="EGFR" placeholder="EGFR">';
    d3Cell.innerHTML = '<input type="number" name="D3" placeholder="D3">';
    b12Cell.innerHTML = '<input type="number" name="B12" placeholder="B12">';
    atCell.innerHTML = '<input type="number" name="AT" placeholder="AT">';
    lt4Cell.innerHTML = '<input type="number" name="LT4" placeholder="LT4">';
    metCell.innerHTML = '<input type="number" name="MET" placeholder="MET">';
    gpCell.innerHTML = '<input type="number" name="GP" placeholder="GP">';
    dpp4Cell.innerHTML = '<input type="number" name="DPP4" placeholder="DPP4">';
    vogCell.innerHTML = '<input type="number" name="VOG" placeholder="VOG">';
    sgltCell.innerHTML = '<input type="number" name="SGLT" placeholder="SGLT">';
    insCell.innerHTML = '<input type="number" name="INS" placeholder="INS">';
    remarksCell.innerHTML = '<input type="text" name="Remarks" placeholder="Remarks">';
    actionCell.innerHTML = '<button type="button" onclick="deleteReportRow(this)">Delete</button>';
}


function deleteReportRow(button) {
    var row = button.parentNode.parentNode;
    row.parentNode.removeChild(row);
}

	     
	     function calculateBMI() {
	            var ht = parseFloat(document.getElementById("HT").value);
	            var wt = parseFloat(document.getElementById("WT").value);
	            if (ht > 0 && wt > 0) {
	                var bmi = (wt / (ht * ht))*10000;
	                document.getElementById("BMI").value = bmi.toFixed(2);
	            } else {
	                document.getElementById("BMI").value = "";
	            }
	       }
	       
	       function calculateBMIs() {
			    try {
			        // Get height from the Objective section
			        var heightElement = document.getElementById('HT');
			        if (!heightElement) {
			            console.error('Height input element not found');
			            return;
			        }
			
			        var height = heightElement.value;
			        console.log('Height:', height);
			
			        // Ensure height is not empty and is a positive number
			        if (!height || height <= 0) {
			            console.error('Invalid height value');
			            return;
			        }
			
			        // Convert height from cm to meters
			        height = height / 100;
			
			        // Get the reports table
			        var table = document.getElementById('reportsTable');
			        if (!table) {
			            console.error('Reports table not found');
			            return;
			        }
			
			        var tbody = table.getElementsByTagName('tbody')[0];
			        if (!tbody) {
			            console.error('Reports table body not found');
			            return;
			        }
			
			        // Iterate over each row in the reports table
			        for (var i = 0; i < tbody.rows.length; i++) {
			            var row = tbody.rows[i];
			            console.log('Processing row:', i, row);
			
			            var weightCell = row.cells[1];
			            if (!weightCell) {
			                console.error('Weight cell not found in row:', i);
			                continue;
			            }
			
			            var weightInput = weightCell.getElementsByTagName('input')[0];
			            if (!weightInput) {
			                console.error('Weight input not found in cell:', weightCell);
			                continue;
			            }
			
			            var bmiCell = row.cells[2];
			            if (!bmiCell) {
			                console.error('BMI cell not found in row:', i);
			                continue;
			            }
			
			            var bmiInput = bmiCell.getElementsByTagName('input')[0];
			            if (!bmiInput) {
			                console.error('BMI input not found in cell:', bmiCell);
			                continue;
			            }
			
			            // Get weight value from the input field
			            var weight = weightInput.value;
			
			            // Ensure weight is not empty and is a positive number
			            if (weight && weight > 0) {
			                // Calculate BMI: weight (kg) / (height (m) * height (m))
			                var bmi = weight / (height * height);
			                // Update BMI field
			                bmiInput.value = bmi.toFixed(2);
			            } else {
			                // Clear BMI field if weight is invalid
			                bmiInput.value = '';
			            }
			        }
			    } catch (error) {
			        console.error('An error occurred in calculateBMIs:', error);
			    }
			}
			
			function showAlert() {
            // Display an alert message
            alert("Patient details updated successfully");
        }
    </script>
</head>
<body>
	
	<div class="navbar">
        <span>Vanamala Clinic</span>
        <button class="home-button" onclick="window.location.href='/patients'">
            <img src="https://img.icons8.com/ios-filled/50/ffffff/home.png" alt="Home">
        </button>
    </div>
    <h1>Patient Details</h1>

    <!-- Personal Information -->
    <div style="margin:5% 2% 0 2%">
        <h2>Personal Information</h2>
        <form th:action="@{'/patient/' + ${patient.id}}" method="post">
			<div class="z"><label>Name: </label><input type="text" name="name" th:value="${patient.name}"></div>
			<div class="z"><label>Date of Birth: </label><input type="text" name="dob" th:value="${patient.dob}"></div>
			<div class="z"><label>Gender: </label><input type="text" name="gender" th:value="${patient.gender}"></div>
			<div class="z"><label>Phone Number: </label><input type="text" name="phone" th:value="${patient.phone}"></div>
			            
			<label>Most Recent Date of Visit: 
			    <span style="margin-left: 7.5%;" th:if="${mostRecentDateOfVisit != null}" th:text="${#dates.format(mostRecentDateOfVisit, 'dd-MM-yyyy')}"></span>
			    <span style="margin-left: 7.5%;" th:if="${mostRecentDateOfVisit == null}">NULL</span>
			</label>

            <!-- Medical Information -->
            <fieldset>
                <legend><h3>Medical Details</h3></legend>
                
                <label for="allergies">Allergies:</label>
                <div id="allergy-list">
                    <div th:each="allergy : ${medicalInfo.allergies}">
                        <input type="text" name="allergies" th:value="${allergy}" placeholder="Allergy" required>
                        <button type="button" onclick="deleteField(this)">Delete</button>
                    </div>
                </div>
                <button type="button" onclick="addAllergyField()">Add Allergy</button><br><br>
                
                <legend><h3>Current Medication</h3></legend>
                <table class = "med-table" id="medicationTable">
                    <thead>
                        <tr>
                            <th>Medicine Name</th>
                            <th>Frequency</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr th:each="medication, iterStat : ${medicalInfo.currentMedication}" ">
                            <td><input type="text" name="medicationNames" th:value="${medication.MedicineName}" placeholder="Medicine Name"></td>
                            <td><input type="text" name="medicationFrequencies" th:value="${medication.freq}" placeholder="Frequency"></td>
                            <td><button type="button" onclick="deleteRow(this)">Delete</button></td>
                        </tr>
                    </tbody>
                </table>
                <button type="button" onclick="addMedicationRow()">Add Medication</button>
            </fieldset>
            <!-- Past History -->
            <fieldset>
                <legend><h3>Past History</h3></legend>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.DM}"> Diabetes Mellitus</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.HTN}"> Hypertension</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.THY}"> Thyroid Disorder</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.DL}"> Dyslipidemia</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.IHD}"> Ischemic Heart Disease</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.CA}"> Coronary Artery Disease</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.BA}"> BA</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.pastHistory.TB}"> TB</label><br>
                <label>Other: <input type="text" th:field="*{medicalInfo.pastHistory.other}"></label><br>
            </fieldset>

            <!-- Family History -->
            <fieldset>
                <legend><h3>Family History</h3></legend>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.DM}"> Diabetes Mellitus</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.HTN}"> Hypertension</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.THY}"> Thyroid Disorder</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.DL}"> Dyslipidemia</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.IHD}"> Ischemic Heart Disease</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.CA}"> Coronary Artery Disease</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.BA}"> BA</label><br>
                <label><input type="checkbox" th:field="*{medicalInfo.familyHistory.TB}"> TB</label><br>
                <label>Other: <input type="text" th:field="*{medicalInfo.familyHistory.other}"></label><br>
            </fieldset>

			<!-- OB History -->
            <div th:if="${patient.gender == 'Female'}">
                
                    <h3>OB History</h3>
                    <label>MA: <input type="number" th:field="*{medicalInfo.obh.MA}"></label><br>
                    <label>MP: <input type="text" th:field="*{medicalInfo.obh.MP}"></label><br>
                    <label>MCU: <input type="number" th:field="*{medicalInfo.obh.MCU}"></label><br>
                    <label>MCB: <input type="number" th:field="*{medicalInfo.obh.MCB}"></label><br>
                    <label>LMP: <input type="date" id="lmp" th:field="*{medicalInfo.obh.LMP}"></label><br>
                    <label>P: <input type="number" min="0" max="6" th:field="*{medicalInfo.obh.P}"></label><br>
                    <label>G: <input type="number" min="0" max="6" th:field="*{medicalInfo.obh.G}"></label><br>
                    <label>A: <input type="text" th:field="*{medicalInfo.obh.A}"></label><br>
                    <label>L: <input type="number" min="0" max="10" th:field="*{medicalInfo.obh.L}"></label><br>
                    
                    <h3>Children Information</h3>
                    <!-- Children Table -->
					<div class = "table-container">
                    <table>
                        <tr>
                            <th>Gender</th>
                            <th>Age</th>
                            <th>FTND/LSCS</th>
                            <th>Complications</th>
                            <th>Action</th>
                        </tr>
                        <tbody id="childrenTableBody">
                            <tr th:each="child,i : ${medicalInfo.obh.children}" th:if="${i.index>0}">
                                <td><input type="text" name="childGender" th:value="${child.gender}" placeholder="Gender"></td>
                                <td><input type="number" name="childAge" th:value="${child.age}" placeholder="Age"></td>
                                <td><input type="text" name="childFTNDLSCS" th:value="${child.type}" placeholder="FTND/LSCS"></td>
                                <td><input type="text" name="childComplications" th:value="${child.complications}" placeholder="Complications"></td>
                                <td><button type="button" onclick="deleteRow(this)">Delete</button></td>
                            </tr>
                        </tbody>
                    </table>
					</div>
                    
                    <!-- Add New Record Button -->
                    <button type="button" onclick="addNewRecord()">Add New Record</button>
                
            </div>
            
            <!-- Habits Section -->
<fieldset>
    <legend><h3>Habits</h3></legend>
    <label for="alcohol">Alcohol:</label>
    <input type="checkbox" id="alcohol" name="habits.alcohol" onclick="toggleTextBox('alcohol')" th:checked="${medicalInfo.habits.alcohol}">
    <input type="text" id="alcoholText" name="habits.alcoholText" th:value="${medicalInfo.habits.alcoholText}" th:classappend="${#strings.isEmpty(medicalInfo.habits.alcoholText) ? 'hidden' : ''}"><br><br>

    <label for="smoking">Smoking:</label>
    <input type="checkbox" id="smoking" name="habits.smoking" onclick="toggleTextBox('smoking')" th:checked="${medicalInfo.habits.smoking}">
    <input type="text" id="smokingText" name="habits.smokingText" th:value="${medicalInfo.habits.smokingText}" th:classappend="${#strings.isEmpty(medicalInfo.habits.smokingText) ? 'hidden' : ''}"><br><br>

    <label for="sleep">Sleep:</label>
    <input type="checkbox" id="sleep" name="habits.sleep" onclick="toggleTextBox('sleep')" th:checked="${medicalInfo.habits.sleep}">
    <input type="text" id="sleepText" name="habits.sleepText" th:value="${medicalInfo.habits.sleepText}" th:classappend="${#strings.isEmpty(medicalInfo.habits.sleepText) ? 'hidden' : ''}"><br><br>

    <label for="bowel">Bowel:</label>
    <input type="checkbox" id="bowel" name="habits.bowel" onclick="toggleTextBox('bowel')" th:checked="${medicalInfo.habits.bowel}">
    <input type="text" id="bowelText" name="habits.bowelText" th:value="${medicalInfo.habits.bowelText}" th:classappend="${#strings.isEmpty(medicalInfo.habits.bowelText) ? 'hidden' : ''}"><br><br>
</fieldset>
<br>

<!-- Objective -->
<fieldset>
    <legend><h3>Objective</h3></legend>
	<div class="comb">
		<div class="first">
			<div class="zz">	<label for="BP">BP:</label>
				    <input type="text" id="BP" name="objective.BP" th:value="${medicalInfo.objective.BP}"><br><br></div>
				<div class="zz">		<label for="SPO2">SPO2:</label>
					    <input type="number" id="SPO2" name="objective.SPO2" th:value="${medicalInfo.objective.SPO2}"><br><br></div>
				<div class="zz">			<label for="PR">PR:</label>
						    <input type="number" step="0.01" id="PR" name="objective.PR" th:value="${medicalInfo.objective.PR}"><br><br></div>
				<div class="zz">				<label for="TEMP">TEMP:</label>
							    <input type="number" step="0.01" id="TEMP" name="objective.TEMP" th:value="${medicalInfo.objective.TEMP}"><br><br></div>
				<div class="zz">					<label for="RBS">RBS:</label>
								    <input type="number" step="0.01" id="RBS" name="objective.RBS" th:value="${medicalInfo.objective.RBS}"><br><br></div>
				<div class="zz">						<label for="HT">HT:</label>
									    <input type="number" step="0.01" id="HT" name="objective.HT" oninput="calculateBMI()" th:value="${medicalInfo.objective.HT}"><br><br>
									    </div>
				<div class="zz">							<label for="WT">WT:</label>
										    <input type="number" step="0.01" id="WT" name="objective.WT" oninput="calculateBMI()" th:value="${medicalInfo.objective.WT}"><br><br></div>
				<div class="zz">								<label for="BMI">BMI:</label>
											    <input type="text" id="BMI" name="objective.BMI" readonly th:value="${medicalInfo.objective.BMI}"><br><br></div>
		</div>
		<div class="second">
			<div class="zz">									<label for="RS">RS:</label>
												   <input type="text" id="RS" name="objective.RS" th:value="${medicalInfo.objective.RS}"><br><br></div>
				<div class="zz">									   <label for="PA">PA:</label>
												       <input type="text" id="PA" name="objective.PA" th:value="${medicalInfo.objective.PA}"><br><br></div>
				<div class="zz">										   <label for="CVS">CVS:</label>
													       <input type="text" id="CVS" name="objective.CVS" th:value="${medicalInfo.objective.CVS}"><br><br></div>
				<div class="zz">											   <label for="ENT">ENT:</label>
														       <input type="text" id="ENT" name="objective.ENT" th:value="${medicalInfo.objective.ENT}"><br><br></div>
				<div class="zz">	<label for="OTH">OTH:</label><input type="text" id="OTH" name="objective.OTH" th:value="${medicalInfo.objective.OTH}"><br><br></div>
		</div>
	</div>
	
	
									
	
    
  
    
</fieldset>

                <h3>Reports</h3>
				<div class="table-container">
                <table   id="reportsTable" >
					 <thead>
                    <tr>
                        <th>Date</th>
                        <th>Wt</th>
                        <th>BMI</th>
                        <th>FBS</th>
                        <th>PPBS</th>
                        <th>A1c</th>
                        <th>SCr</th>
                        <th>UAC</th>
                        <th>TC</th>
                        <th>TGL</th>
                        <th>LDL</th>
                        <th>HDL</th>
                        <th>TSH</th>
                        <th>Hb</th>
                        <th>TLC</th>
                        <th>EGFR</th>
                        <th>D3</th>
                        <th>B12</th>
                        <th>AT</th>
                        <th>LT4</th>
                        <th>MET</th>
                        <th>GP</th>
                        <th>DPP4</th>
                        <th>VOG</th>
                        <th>SGLT</th>
                        <th>INS</th>
                        <th>Remarks</th>
                        <th>Action</th>
                    </tr>
					 </thead>
                    <tbody>
            <tr th:each="report : ${medicalInfo.reports}">
                <td><input type="text" name="Date" th:value="${report.Date}"></td>
                <td><input type="number" step="0.01" name="Wt" th:value="${report.Wt}" oninput="calculateBMIs()"></td>
                <td><input type="number" step="0.01" name="BMI" th:value="${report.BMI}" readonly></td>
                <td><input type="number" step="0.01" name="FBS" th:value="${report.FBS}"></td>
                <td><input type="number" step="0.01" name="PPBS" th:value="${report.PPBS}"></td>
                <td><input type="number" step="0.01" name="A1c" th:value="${report.A1c}"></td>
                <td><input type="number" step="0.01" name="SCr" th:value="${report.SCr}"></td>
                <td><input type="number" step="0.01" name="UAC" th:value="${report.UAC}"></td>
                <td><input type="number" step="0.01" name="TC" th:value="${report.TC}"></td>
                <td><input type="number" step="0.01" name="TGL" th:value="${report.TGL}"></td>
                <td><input type="number" step="0.01" name="LDL" th:value="${report.LDL}"></td>
                <td><input type="number" step="0.01" name="HDL" th:value="${report.HDL}"></td>
                <td><input type="number" step="0.01" name="TSH" th:value="${report.TSH}"></td>
                <td><input type="number" step="0.01" name="Hb" th:value="${report.Hb}"></td>
                <td><input type="number" name="TLC" th:value="${report.TLC}"></td>
                <td><input type="number" name="EGFR" th:value="${report.EGFR}"></td>
                <td><input type="number" name="D3" th:value="${report.D3}"></td>
                <td><input type="number" name="B12" th:value="${report.B12}"></td>
                <td><input type="number" name="AT" th:value="${report.AT}"></td>
                <td><input type="number" name="LT4" th:value="${report.LT4}"></td>
                <td><input type="number" name="MET" th:value="${report.MET}"></td>
                <td><input type="number" name="GP" th:value="${report.GP}"></td>
                <td><input type="number" name="DPP4" th:value="${report.DPP4}"></td>
                <td><input type="number" name="VOG" th:value="${report.VOG}"></td>
                <td><input type="number" name="SGLT" th:value="${report.SGLT}"></td>
                <td><input type="number" name="INS" th:value="${report.INS}"></td>
                <td><input type="number" name="Remarks" th:value="${report.Remarks}"></td>
                <td><button type="button" onclick="deleteRow(this)">Delete</button></td>
            </tr>
        </tbody>
                </table>
                
				</div>
				<button type="button" onclick="addReportRow()">Add New Record</button>
            <br>

			
            <button type="submit" onclick="showAlert()">Update</button>
            
            <!-- Add this section to display previous consultations -->
			<div>
			    <h2>Previous Consultations</h2>
			    <ul>
			        <!-- Iterate over previous consultations and display them as buttons -->
			        <li th:each="consultation : ${previousConsultations}">
			            <!-- Updated hyperlink in view_patient_details.html -->
					
							<a class="btn" th:href="@{'/consultation-details/' + ${consultation.id}}">
						    <span th:text="${#dates.format(consultation.dateOfVisit, 'dd/MM/yyyy')}"></span>
							</a>
					


			        </li>
			    </ul>
			</div>

        </form>
         <form action="/consultation" method="get">
	        <input type="hidden" name="id" th:value="${patient.id}">
	        <button type="submit">Add Consultation</button>
	    </form>
	    
	    
    </div>
</body>
</html>
